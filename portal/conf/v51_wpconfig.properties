SaveParentProperties=True
#Change to the appropriate ibm.com ssl virtual host for tst, staging or production
VirtualHostName=<customer SSL virtual host>

# Since we are deploying to a federated environment, the admin server isn't really important, just leave it.
WasAdminServer=nodeagent
WasHome=/usr/WebSphere51/AppServer
WasUserHome=/usr/WebSphere51/AppServer

# This is the LDAP string for the eiauth@events.ihost.com user in UD.  Change as necessary if using WI.
WasUserid=uid=060000GMV4WI,ou=persons,o=ibm.com
WasPassword=

WpsInstallLocation=/usr/WebSphere51/PortalServer
# Set PrimayNode to "false" if this box will be added to a cluster where
# Portal was already installed on a node federated to the same DM
PrimaryNode=true
# If already federated, then set CellName to the DM.
# Otherwise, if not federated, set to the hostname
CellName=<DM|hostname>
NodeName=<hostname>
ServerName=<hostname>_<customer>_wps
# Add loop<customer> ( i.e. loopibm ) entry to /etc/hosts for 127.0.0.1 loopback line
WpsHostName=loop<customer>   


# WpsHostPort must be set during run of the config scripts to the non-ssl port for the appserver  - check afterwards
WpsHostPort=9070
 Leave this port setting empty, it will be determined and filled in by the Portal configuration when the appserver is created.
WpsSoapPort=

# The name that the WPS application will show up as in the WAS adminconsole
WpsAppName=wps
# The root URI for WPS, this is configurable and should be changed per customer requirements (i.e. default URL becomes http://hostname.com/wps)
WpsContextRoot=wps
# The WSRP context root is only used if the customer's portal uses Web Services for Remote Portlets.  Leave as default unless otherwise needed.
WsrpContextRoot=wsrp
# The base level URI for accessing the portal -- i.e. http://hostname.com/wps/portal
WpsDefaultHome=portal
# The base level URI for logged in portal users -- i.e. http://hostname.com/wps/myportal
WpsPersonalizedHome=myportal

JavaHome=/usr/WebSphere51/AppServer/java

# The Portal admin user should not be set to a personal ID, and needs to be a member of the Portal Admin group.
# Comment section out depending on if this install is for test, staging or production
# Production IBM.COM 
# PortalAdminId=uid=060001TJG6WI,ou=persons,o=ibm.com
# PortalAdminIdShort=ibmwpp@events.ihost.com
# PortalAdminPwd=<obtain from password store>
# PortalAdminGroupId=cn=IBMWPP Admins,ou=groups,o=ibm.com
# PortalAdminGroupIdshort=IBMWPP Admins
# Staging IBM.COM 
# PortalAdminId=uid=060001TJFKWI,ou=persons,o=ibm.com
# PortalAdminIdShort=ibmwps@events.ihost.com
# PortalAdminPwd=<obtain from password store>
# PortalAdminGroupId=cn=IBMWPS Admins,ou=groups,o=ibm.com
# PortalAdminGroupIdshort=IBMWPS Admins
# Test IBM.COM 
PortalAdminId=uid=060001TJFTWI,ou=persons,o=ibm.com
PortalAdminIdShort=ibmwpt@events.ihost.com
PortalAdminPwd=<obtain from password store>
PortalAdminGroupId=cn=IBMWPT Admins,ou=groups,o=ibm.com
PortalAdminGroupIdshort=IBMWPT Admins

# Unique ID based on MAC address of network adapater - Grab value from original wpconfig.properties file
PortalUniqueID=

# Turns off content management features
CmConfigured=false
WtpConfigured=true

# The configuration failed for me a few times when I didn't specify groups for these, so if not needed for the customer, set to the Applications group
WpsContentAdministrators=cn=HPODS Applications,ou=groups,o=ibm.com
WpsContentAdministratorsShort=HPODS Applications
WpsDocReviewer=cn=HPODS Applications,ou=groups,o=ibm.com
WpsDocReviewerShort=HPODS Applications

CheckVersions=true

# Keep this set to false, otherwise the install will skip setting up the databases.  Only use if you have  databases that are pre-populated with WPS info.
DbSafeMode=false
DbType=db2
# Name of the actual database
WpsDbName=wps
# These DB2 driver names are CASE SENSITIVE.
DbDriver=COM.ibm.db2.jdbc.app.DB2Driver
DbDriverDs=COM.ibm.db2.jdbc.DB2XADataSource
JdbcProvider=wpsJDBC
DbUrl=jdbc:db2:wps
# Insert your database user here
DbUser=wpsibmus
DbPassword=<obtain from password store>
# The path to the DB2 drivers, replace as needed.
DbLibrary=/db2_database/wpsibmdb/sqllib/java/db2java.zip
WpsDsName=wpsDS
# Name of the database catalog
WpsXDbName=wps
# Name of the node the database was cataloged to
WpsDbNode=wps

# Document conversion services... not needed unless told otherwise, same with spellcheck
DcsRemoteHost=http://remotehostname:9080/dcs/dcs
SpellCheckHost=remotehostname
SpellCheckPort=9080

# The JCR (java content repository) database is heavily used by Document Manager, and also Personalization (as in, users can add/create pages).
# Unless a customer requests either of these, there is no need to configure it and you can leave it set to Cloudscape.
JcrDbName=wps
JcrDbUser=wpsibmus
JcrDbPassword=<obtain from password store>
JcrDbUrl=jdbc:db2:wps
JcrXDbName=wps
JcrDbNode=wps
JcrJdbcProvider=wpsJDBC
JcrDsName=jcrDS
JcrGeneratedDDLPath=${WpsInstallLocation}/jcr/config/dynamic
JcrBinaryValueFileDir=${WpsInstallLocation}/jcr/binaryValues
JcrDebugLevel=2
JcrDbUnicode=Y
JcrDbSaPassword=<obtain from password store>
# The following items are used for JCR enabled workflows
JcrBPCServerName=
JcrJMSJAASUser=
JcrJMSJAASPassword=
JcrJMSType=mq
JcrMQQueueManager=

# Feedback and Likeminds databases are also a part of Personalization, and not needed... they too can be left as Cloudscape.
InitializeFeedbackDB=true
PznDbNode=wps
FeedbackXDbName=wps
FeedbackDbName=wps
FeedbackDbUser=wpsibmus
FeedbackDbPassword=<obtain from password store>
FeedbackDbUrl=jdbc:db2:wps
LikemindsXDbName=wps
LikemindsDbName=wps
LikemindsDbUser=wpsibmus
LikemindsDbPassword=<obtain from password store>
LikemindsDbUrl=jdbc:db2:wps

# The WebSphere Member Manager database, this is required stuff, but can be jammed in with the WPS database since our users are in LDAP.
WmmDsName=wmmDS
WmmAppName=wmmApp
WmmDbName=wps
WmmDbUser=wpsibmus
WmmDbPassword=<obtain from password store>
WmmDbUrl=jdbc:db2:wps
WmmEjbName=ejb/MemberServiceHome

# The ever important LDAP settings -- for LTPA, use the keystore password, which is what the security enablement scripts use for generating LTPA keys
LTPAPassword=<obtain from the ei_yz_was.jks certificate entry in the  password store> 
# SSO can be set to require SSL or not, depends on customer requirements, though most likely should be set to true.
SSORequiresSSL=true
# Set the domain as necessary
SSODomainName=ibm.com
useDomainQualifiedUserNames=false
cacheTimeout=600
issuePermissionWarning=true
activeProtocol=BOTH
activeAuthMechanism=LTPA
CUClassName=com.ibm.websphere.wmm.registry.WMMCustomRegistry
# LookAside is a special LDAP+DB setup in which attributes that cannot be stored in LDAP are put in a DB and associated with the user.
LookAside=false
WmmDefaultRealm=portal
# This is the UD host, change if necessary.
LDAPHostName=d03xldcl201g.gwa.boulder.ibm.com
LDAPPort=636
# The LDAP Admin and Bind IDs, same as what we set for the WAS security settings.  The Admin ID doesn't need actual admin privileges for our setup.
# Using eiauth@events.ihost.com
LDAPAdminUId=uid=060000GMV4WI,ou=persons,o=ibm.com
LDAPAdminPwd=<obtain from password store>
LDAPServerType=IBM_DIRECTORY_SERVER
LDAPBindID=uid=060000GMV4WI,ou=persons,o=ibm.com
LDAPBindPassword=<obtain from the eiauth@events.ihost.com entry in password store>
# The WMM System ID is used for accessing the WMM EJB which is secured, use the same as the LDAP Admin or WAS Admin
WmmSystemId=uid=060000GMV4WI,ou=persons,o=ibm.com
WmmSystemIdPassword=<obtain from the eiauth@events.ihost.com entry in password store>
# The LDAPSuffix is the where you can specify  the Base DN.
LDAPSuffix=o=ibm.com
# These next block of values are the advanced LDAP settings, change as necessary if not using UD.
LdapUserPrefix=uid
LDAPUserSuffix=ou=persons
LdapGroupPrefix=cn
LDAPGroupSuffix=ou=groups
LDAPUserObjectClass=udPerson
LDAPGroupObjectClass=UDgroupOfUniqueNames
LDAPGroupMember=uniqueMember
LDAPUserFilter=(&(authenid=%v)(objectclass=udPerson))
LDAPGroupFilter=(&(cn=%v)(|(objectclass=groupOfUniqueNames)(objectclass=UDgroupOfUniqueNames)))
LDAPGroupMinimumAttributes=cn
LDAPUserBaseAttributes=cn,givenName,authenid,mail
LDAPUserMinimumAttributes=
LDAPsearchTimeout=120
# We should set Reuse to false since we point to clustered LDAP servers.
LDAPreuseConnection=false
LDAPIgnoreCase=true
# Setting the Port isn't enough, you have to tell Portal that SSL is enabled.
LDAPsslEnabled=true
